#####Setup#####

Intermediate Algorithm Scripting: Sum All Odd Fibonacci NumbersPassed

Given a positive integer num, return the sum of all odd Fibonacci numbers that are less than or equal to num.

The first two numbers in the Fibonacci sequence are 1 and 1. Every additional number in the sequence is the sum of the two previous numbers. The first six numbers of the Fibonacci sequence are 1, 1, 2, 3, 5 and 8.

For example, sumFibs(10) should return 10 because all odd Fibonacci numbers less than or equal to 10 are 1, 1, 3, and 5.

#####Solution#####

const sumFibs = num => {

  let numsArr = [0,1];
  
  for (let i = 2; i < num + 1; i++){
    numsArr.push(numsArr[i-2] + numsArr[i-1]);
    if (numsArr[numsArr.length - 1] > num){break;}
    }
  
  return numsArr
  .filter(element => element <= num && element % 2)
  .reduce((accum, curr) => accum + curr);
  
  };

console.log(sumFibs(4000000));
